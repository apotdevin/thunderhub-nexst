# ------------------------------------------------------
# THIS FILE WAS AUTOMATICALLY GENERATED (DO NOT MODIFY)
# ------------------------------------------------------

type AmbossSubscription {
  end_date: String!
  subscribed: Boolean!
  upgradable: Boolean!
}

type AmbossUser {
  subscription: AmbossSubscription
}

type Balances {
  lightning: LightningBalance!
  onchain: OnChainBalance!
}

type BitcoinFee {
  fast: Float!
  halfHour: Float!
  hour: Float!
  minimum: Float!
}

type BosScore {
  alias: String!
  position: Float!
  public_key: String!
  score: Float!
  updated: String!
}

type BosScoreInfo {
  count: Float!
  first: BosScore
  last: BosScore
}

type LightningAddress {
  lightning_address: String!
  pubkey: String!
}

type LightningBalance {
  active: String!
  commit: String!
  confirmed: String!
  pending: String!
}

type LightningNodeSocialInfo {
  socials: NodeSocial
}

type Mutation {
  getAuthToken(cookie: String!): Boolean!
  getSessionToken(id: String!, password: String!): String!
  loginAmboss: Boolean!
  logout: Boolean!
}

type Node {
  node: NodeType!
}

type NodeBosHistory {
  info: BosScoreInfo!
  scores: [BosScore!]!
}

type NodeInfo {
  active_channels_count: Float!
  alias: String!
  chains: [String!]!
  closed_channels_count: Float!
  color: String!
  current_block_hash: String!
  current_block_height: Float!
  is_synced_to_chain: Boolean!
  is_synced_to_graph: Boolean!
  latest_block_at: String!
  peers_count: Float!
  pending_channels_count: Float!
  public_key: String!
  uris: [String!]!
  version: String!
}

type NodeSocial {
  info: NodeSocialInfo
}

type NodeSocialInfo {
  email: String
  private: Boolean
  telegram: String
  twitter: String
  twitter_verified: Boolean
  website: String
}

type NodeType {
  alias: String!
  capacity: String
  channel_count: Float
  color: String
  public_key: String
  updated_at: String
}

type OnChainBalance {
  closing: String!
  confirmed: String!
  pending: String!
}

type Query {
  getAccount: ServerAccount!
  getAmbossLoginToken: String!
  getAmbossUser: AmbossUser!
  getBaseCanConnect: Boolean!
  getBitcoinFees: BitcoinFee!
  getBitcoinPrice: String!
  getBosScores: [BosScore!]!
  getHello: String!
  getLatestVersion: String!
  getLightningAddresses: [LightningAddress!]!
  getNode(publicKey: String!, withoutChannels: Boolean!): Node!
  getNodeBalances: Balances!
  getNodeBosHistory(pubkey: String!): NodeBosHistory!
  getNodeInfo: NodeInfo!
  getNodeSocialInfo(pubkey: String!): LightningNodeSocialInfo!
  getServerAccounts: [ServerAccount!]!
  getWalletInfo: Wallet!
}

type ServerAccount {
  id: String!
  loggedIn: Boolean!
  name: String!
  type: String!
}

type Wallet {
  build_tags: [String!]!
  commit_hash: String!
  is_autopilotrpc_enabled: Boolean!
  is_chainrpc_enabled: Boolean!
  is_invoicesrpc_enabled: Boolean!
  is_signrpc_enabled: Boolean!
  is_walletrpc_enabled: Boolean!
  is_watchtowerrpc_enabled: Boolean!
  is_wtclientrpc_enabled: Boolean!
}
